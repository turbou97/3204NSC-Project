%Setting up the function for the Constant Driven ODE to be solved and plotted
function [] = bridgeOdeft()

%Constants
B=1.2; %Dampening factor [Ns/m]
M=10; %Mass of the bridge [kg]
K=1.5; %Spring constant (stiffness) [N/m]
G=1; %Driving force [N]

%Getting randomly distributed foraces from pedestrians
F=random_forces();

%Setting up the Comstantly Driven ODE
    function du = f(t,u)
        du=zeros(2,1);
        du(1)=u(2);
        du(2)=-(B/M)*u(2)-(K/M)*u(1)+(G/M)*sin(t)*sum(F);
    end

%Initial conditions and time span
u0=[0,0];
tspan=[0 100];

%ODE Solver
[t,u] = ode45(@f,tspan,u0);

%Solving for A and P

P=atan((sqrt(K/M).*u(:,1))./u(:,2));

A=sqrt(((K/M)*u(:,1).^2+u(:,2).^2)/(K/M));

%Plotting Solutions
subplot(221);plot(t,u(:,1))
title('Distance x from origin at time t')
xlabel('time (s)')
ylabel('Distance [m]')
legend('m')
subplot(222);plot(t,u(:,2))
title('Centering/Returning velocity at time t')
xlabel('time (s)')
ylabel('Velocity [m/s]')
legend('m/s')
subplot(223);plot(t,A(:,1))
title('Amplitude')
xlabel('time (s)')
ylabel('Distance [m]')
legend('m')
subplot(224);plot(t,P(:,1))
title('Phase')
xlabel('time (s)')
ylabel('Distance [m]')
legend('m')
