%This script will attempt to combine both the ODE for the bridge and
%pedestrian gait
function [] = bodeCom ()

%Constants
B=1; %Dampening factor [Ns/m]
M=10; %Mass of the bridge [kg]
K=1; %Spring constant (stiffness) [N/m]
G=1; %Driving force [N]
C=16; %Pedestrians susceptibility to the bridge (given by paper, measured)
a=1; %Phase lag frequency

%Pre allocating X and X'
u=zeros(102,1);
du=zeros(size(u));

%Setting up A and P

%Setting up the ODE for X,X' and \Theta
    function du = f(t,u)
        du=zeros(size(u));
        P=atan2((sqrt(K/M)*u(1)),u(2));
        A=sqrt(((K/M)*u(1)^2+u(2)^2)/(K/M));
        du(1)=u(2,1);
        du(2)=-(B/M)*u(2,1)-(K/M)*u(1,1)+(G/M)*sum(u(3:end,1));
        du(3:end)=rand(size(du(3:end)))+(C*A)*sin(P-u(3:end)+a);
    end

%Initial conditions and time span
u0=zeros(102,1);
tspan=[0 100];

%ODE Solver
[t,u] = ode15s(@f,tspan,u0);
%Solving for A and P



%Plotting Solutions
% subplot(221);
plot(t,u(:,1));
title('Distance x from origin at time t')
xlabel('time (s)')
ylabel('Distance [m]')
% subplot(222);plot(t,u(2))
% title('Centering/Returning velocity at time t')
% xlabel('time (s)')
% ylabel('Velocity [m/s]')
% subplot(223);plot(t,A(:,1))
% title('Amplitude')
% xlabel('time (s)')
% ylabel('Distance [m]')
% subplot(224);plot(t,P(:,1))
% title('Phase')
% xlabel('time (s)')
% ylabel('Radians [\theta]')

end
